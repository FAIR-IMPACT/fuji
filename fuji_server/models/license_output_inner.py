# -*- coding: utf-8 -*-

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fuji_server.models.base_model_ import Model
from fuji_server import util


class LicenseOutputInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, license: str = None, osi_approved: bool = False, details_url: str = None):  # noqa: E501
        """LicenseOutputInner - a model defined in Swagger

        :param license: The license of this LicenseOutputInner.  # noqa: E501
        :type license: str
        :param osi_approved: The osi_approved of this LicenseOutputInner.  # noqa: E501
        :type osi_approved: bool
        :param details_url: The details_url of this LicenseOutputInner.  # noqa: E501
        :type details_url: str
        """
        self.swagger_types = {'license': str, 'osi_approved': bool, 'details_url': str}

        self.attribute_map = {'license': 'license', 'osi_approved': 'OSI_approved', 'details_url': 'details_url'}
        self._license = license
        self._osi_approved = osi_approved
        self._details_url = details_url

    @classmethod
    def from_dict(cls, dikt) -> 'LicenseOutputInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The License_output_inner of this LicenseOutputInner.  # noqa: E501
        :rtype: LicenseOutputInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license(self) -> str:
        """Gets the license of this LicenseOutputInner.


        :return: The license of this LicenseOutputInner.
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license: str):
        """Sets the license of this LicenseOutputInner.


        :param license: The license of this LicenseOutputInner.
        :type license: str
        """

        self._license = license

    @property
    def osi_approved(self) -> bool:
        """Gets the osi_approved of this LicenseOutputInner.


        :return: The osi_approved of this LicenseOutputInner.
        :rtype: bool
        """
        return self._osi_approved

    @osi_approved.setter
    def osi_approved(self, osi_approved: bool):
        """Sets the osi_approved of this LicenseOutputInner.


        :param osi_approved: The osi_approved of this LicenseOutputInner.
        :type osi_approved: bool
        """

        self._osi_approved = osi_approved

    @property
    def details_url(self) -> str:
        """Gets the details_url of this LicenseOutputInner.


        :return: The details_url of this LicenseOutputInner.
        :rtype: str
        """
        return self._details_url

    @details_url.setter
    def details_url(self, details_url: str):
        """Sets the details_url of this LicenseOutputInner.


        :param details_url: The details_url of this LicenseOutputInner.
        :type details_url: str
        """

        self._details_url = details_url
