# -*- coding: utf-8 -*-

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from fuji_server import util
from fuji_server.models.base_model_ import Model


class RelatedResourceOutputInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, related_resource: str = None, relation_type: str = None):  # noqa: E501
        """RelatedResourceOutputInner - a model defined in Swagger

        :param related_resource: The related_resource of this RelatedResourceOutputInner.  # noqa: E501
        :type related_resource: str
        :param relation_type: The relation_type of this RelatedResourceOutputInner.  # noqa: E501
        :type relation_type: str
        """
        self.swagger_types = {"related_resource": str, "relation_type": str}

        self.attribute_map = {"related_resource": "related_resource", "relation_type": "relation_type"}
        self._related_resource = related_resource
        self._relation_type = relation_type

    @classmethod
    def from_dict(cls, dikt) -> "RelatedResourceOutputInner":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RelatedResource_output_inner of this RelatedResourceOutputInner.  # noqa: E501
        :rtype: RelatedResourceOutputInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def related_resource(self) -> str:
        """Gets the related_resource of this RelatedResourceOutputInner.


        :return: The related_resource of this RelatedResourceOutputInner.
        :rtype: str
        """
        return self._related_resource

    @related_resource.setter
    def related_resource(self, related_resource: str):
        """Sets the related_resource of this RelatedResourceOutputInner.


        :param related_resource: The related_resource of this RelatedResourceOutputInner.
        :type related_resource: str
        """

        self._related_resource = related_resource

    @property
    def relation_type(self) -> str:
        """Gets the relation_type of this RelatedResourceOutputInner.


        :return: The relation_type of this RelatedResourceOutputInner.
        :rtype: str
        """
        return self._relation_type

    @relation_type.setter
    def relation_type(self, relation_type: str):
        """Sets the relation_type of this RelatedResourceOutputInner.


        :param relation_type: The relation_type of this RelatedResourceOutputInner.
        :type relation_type: str
        """

        self._relation_type = relation_type
