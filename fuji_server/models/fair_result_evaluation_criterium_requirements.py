# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fuji_server.models.base_model_ import Model
from fuji_server import util


class FAIRResultEvaluationCriteriumRequirements(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, modality: str=None, required: List[str]=None):  # noqa: E501
        """FAIRResultEvaluationCriteriumRequirements - a model defined in Swagger

        :param modality: The modality of this FAIRResultEvaluationCriteriumRequirements.  # noqa: E501
        :type modality: str
        :param required: The required of this FAIRResultEvaluationCriteriumRequirements.  # noqa: E501
        :type required: List[str]
        """
        self.swagger_types = {
            'modality': str,
            'required': List[str]
        }

        self.attribute_map = {
            'modality': 'modality',
            'required': 'required'
        }
        self._modality = modality
        self._required = required

    @classmethod
    def from_dict(cls, dikt) -> 'FAIRResultEvaluationCriteriumRequirements':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FAIRResultEvaluationCriteriumRequirements of this FAIRResultEvaluationCriteriumRequirements.  # noqa: E501
        :rtype: FAIRResultEvaluationCriteriumRequirements
        """
        return util.deserialize_model(dikt, cls)

    @property
    def modality(self) -> str:
        """Gets the modality of this FAIRResultEvaluationCriteriumRequirements.


        :return: The modality of this FAIRResultEvaluationCriteriumRequirements.
        :rtype: str
        """
        return self._modality

    @modality.setter
    def modality(self, modality: str):
        """Sets the modality of this FAIRResultEvaluationCriteriumRequirements.


        :param modality: The modality of this FAIRResultEvaluationCriteriumRequirements.
        :type modality: str
        """

        self._modality = modality

    @property
    def required(self) -> List[str]:
        """Gets the required of this FAIRResultEvaluationCriteriumRequirements.


        :return: The required of this FAIRResultEvaluationCriteriumRequirements.
        :rtype: List[str]
        """
        return self._required

    @required.setter
    def required(self, required: List[str]):
        """Sets the required of this FAIRResultEvaluationCriteriumRequirements.


        :param required: The required of this FAIRResultEvaluationCriteriumRequirements.
        :type required: List[str]
        """

        self._required = required
