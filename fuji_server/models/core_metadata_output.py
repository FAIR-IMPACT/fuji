from fuji_server import util
from fuji_server.models.base_model_ import Model
from fuji_server.models.output_core_metadata_found import OutputCoreMetadataFound  # noqa: F401,E501


class CoreMetadataOutput(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        core_metadata_status: str = None,
        core_metadata_found: OutputCoreMetadataFound = None,
        core_metadata_source: list[str] = None,
    ):  # noqa: E501
        """CoreMetadataOutput - a model defined in Swagger

        :param core_metadata_status: The core_metadata_status of this CoreMetadataOutput.  # noqa: E501
        :type core_metadata_status: str
        :param core_metadata_found: The core_metadata_found of this CoreMetadataOutput.  # noqa: E501
        :type core_metadata_found: OutputCoreMetadataFound
        :param core_metadata_source: The core_metadata_source of this CoreMetadataOutput.  # noqa: E501
        :type core_metadata_source: List[str]
        """
        self.swagger_types = {
            "core_metadata_status": str,
            "core_metadata_found": OutputCoreMetadataFound,
            "core_metadata_source": list[str],
        }

        self.attribute_map = {
            "core_metadata_status": "core_metadata_status",
            "core_metadata_found": "core_metadata_found",
            "core_metadata_source": "core_metadata_source",
        }
        self._core_metadata_status = core_metadata_status
        self._core_metadata_found = core_metadata_found
        self._core_metadata_source = core_metadata_source

    @classmethod
    def from_dict(cls, dikt) -> "CoreMetadataOutput":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CoreMetadata_output of this CoreMetadataOutput.  # noqa: E501
        :rtype: CoreMetadataOutput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def core_metadata_status(self) -> str:
        """Gets the core_metadata_status of this CoreMetadataOutput.


        :return: The core_metadata_status of this CoreMetadataOutput.
        :rtype: str
        """
        return self._core_metadata_status

    @core_metadata_status.setter
    def core_metadata_status(self, core_metadata_status: str):
        """Sets the core_metadata_status of this CoreMetadataOutput.


        :param core_metadata_status: The core_metadata_status of this CoreMetadataOutput.
        :type core_metadata_status: str
        """
        allowed_values = ["insufficent metadata", "partial metadata", "all metadata"]  # noqa: E501
        if core_metadata_status not in allowed_values:
            raise ValueError(
                f"Invalid value for `core_metadata_status` ({core_metadata_status}), must be one of {allowed_values}"
            )

        self._core_metadata_status = core_metadata_status

    @property
    def core_metadata_found(self) -> OutputCoreMetadataFound:
        """Gets the core_metadata_found of this CoreMetadataOutput.


        :return: The core_metadata_found of this CoreMetadataOutput.
        :rtype: OutputCoreMetadataFound
        """
        return self._core_metadata_found

    @core_metadata_found.setter
    def core_metadata_found(self, core_metadata_found: OutputCoreMetadataFound):
        """Sets the core_metadata_found of this CoreMetadataOutput.


        :param core_metadata_found: The core_metadata_found of this CoreMetadataOutput.
        :type core_metadata_found: OutputCoreMetadataFound
        """

        self._core_metadata_found = core_metadata_found

    @property
    def core_metadata_source(self) -> list[str]:
        """Gets the core_metadata_source of this CoreMetadataOutput.


        :return: The core_metadata_source of this CoreMetadataOutput.
        :rtype: List[str]
        """
        return self._core_metadata_source

    @core_metadata_source.setter
    def core_metadata_source(self, core_metadata_source: list[str]):
        """Sets the core_metadata_source of this CoreMetadataOutput.


        :param core_metadata_source: The core_metadata_source of this CoreMetadataOutput.
        :type core_metadata_source: List[str]
        """

        self._core_metadata_source = core_metadata_source
