"""
    F-UJI

    A Service for Evaluating Research Data Objects Based on <a href ='https://doi.org/10.5281/zenodo.3775793'>FAIRsFAIR Metrics</a>. <p> This work was supported by the <a href='https://www.fairsfair.eu/'>FAIRsFAIR</a> project (H2020-INFRAEOSC-2018-2020 Grant Agreement 831558).  # noqa: E501

    OpenAPI spec version: 3.0.1
    Contact: anusuriya.devaraju@googlemail.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class Body:
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "object_identifier": "str",
        "test_debug": "bool",
        "metadata_service_endpoint": "str",
        "metadata_service_type": "str",
        "use_datacite": "bool",
        "use_github": "bool",
        "metric_version": "str",
        "auth_token": "str",
        "auth_token_type": "str",
        "oaipmh_endpoint": "str",
    }

    attribute_map = {
        "object_identifier": "object_identifier",
        "test_debug": "test_debug",
        "metadata_service_endpoint": "metadata_service_endpoint",
        "metadata_service_type": "metadata_service_type",
        "use_datacite": "use_datacite",
        "use_github": "use_github",
        "metric_version": "metric_version",
        "auth_token": "auth_token",
        "auth_token_type": "auth_token_type",
        "oaipmh_endpoint": "oaipmh_endpoint",
    }

    def __init__(
        self,
        object_identifier=None,
        test_debug=False,
        metadata_service_endpoint=None,
        metadata_service_type=None,
        use_datacite=None,
        use_github=None,
        metric_version=None,
        auth_token=None,
        auth_token_type=None,
        oaipmh_endpoint=None,
    ):
        """Body - a model defined in Swagger"""
        self._object_identifier = None
        self._test_debug = None
        self._metadata_service_endpoint = None
        self._metadata_service_type = None
        self._use_datacite = None
        self._use_github = None
        self._metric_version = None
        self._auth_token = None
        self._auth_token_type = None
        self._oaipmh_endpoint = None
        self.discriminator = None
        self.object_identifier = object_identifier
        if test_debug is not None:
            self.test_debug = test_debug
        if metadata_service_endpoint is not None:
            self.metadata_service_endpoint = metadata_service_endpoint
        if metadata_service_type is not None:
            self.metadata_service_type = metadata_service_type
        if use_datacite is not None:
            self.use_datacite = use_datacite
        if use_github is not None:
            self.use_github = use_github
        if metric_version is not None:
            self.metric_version = metric_version
        if auth_token is not None:
            self.auth_token = auth_token
        if auth_token_type is not None:
            self.auth_token_type = auth_token_type
        if oaipmh_endpoint is not None:
            self.oaipmh_endpoint = oaipmh_endpoint

    @property
    def object_identifier(self):
        """Gets the object_identifier of this Body.  # noqa: E501

        The full identifier of data object that needs to be evaluated  # noqa: E501

        :return: The object_identifier of this Body.  # noqa: E501
        :rtype: str
        """
        return self._object_identifier

    @object_identifier.setter
    def object_identifier(self, object_identifier):
        """Sets the object_identifier of this Body.

        The full identifier of data object that needs to be evaluated  # noqa: E501

        :param object_identifier: The object_identifier of this Body.  # noqa: E501
        :type: str
        """
        if object_identifier is None:
            raise ValueError("Invalid value for `object_identifier`, must not be `None`")

        self._object_identifier = object_identifier

    @property
    def test_debug(self):
        """Gets the test_debug of this Body.  # noqa: E501

        Indicate if the detailed evaluation procedure of the metrics should to be included in the response  # noqa: E501

        :return: The test_debug of this Body.  # noqa: E501
        :rtype: bool
        """
        return self._test_debug

    @test_debug.setter
    def test_debug(self, test_debug):
        """Sets the test_debug of this Body.

        Indicate if the detailed evaluation procedure of the metrics should to be included in the response  # noqa: E501

        :param test_debug: The test_debug of this Body.  # noqa: E501
        :type: bool
        """

        self._test_debug = test_debug

    @property
    def metadata_service_endpoint(self):
        """Gets the metadata_service_endpoint of this Body.  # noqa: E501

        The URL of the catalogue endpoint (e.g. OAI-PMH data-provider)  # noqa: E501

        :return: The metadata_service_endpoint of this Body.  # noqa: E501
        :rtype: str
        """
        return self._metadata_service_endpoint

    @metadata_service_endpoint.setter
    def metadata_service_endpoint(self, metadata_service_endpoint):
        """Sets the metadata_service_endpoint of this Body.

        The URL of the catalogue endpoint (e.g. OAI-PMH data-provider)  # noqa: E501

        :param metadata_service_endpoint: The metadata_service_endpoint of this Body.  # noqa: E501
        :type: str
        """

        self._metadata_service_endpoint = metadata_service_endpoint

    @property
    def metadata_service_type(self):
        """Gets the metadata_service_type of this Body.  # noqa: E501


        :return: The metadata_service_type of this Body.  # noqa: E501
        :rtype: str
        """
        return self._metadata_service_type

    @metadata_service_type.setter
    def metadata_service_type(self, metadata_service_type):
        """Sets the metadata_service_type of this Body.


        :param metadata_service_type: The metadata_service_type of this Body.  # noqa: E501
        :type: str
        """

        self._metadata_service_type = metadata_service_type

    @property
    def use_datacite(self):
        """Gets the use_datacite of this Body.  # noqa: E501

        Indicates if DataCite content negotiation (using the DOI) shall be used to collect metadata  # noqa: E501

        :return: The use_datacite of this Body.  # noqa: E501
        :rtype: bool
        """
        return self._use_datacite

    @use_datacite.setter
    def use_datacite(self, use_datacite):
        """Sets the use_datacite of this Body.

        Indicates if DataCite content negotiation (using the DOI) shall be used to collect metadata  # noqa: E501

        :param use_datacite: The use_datacite of this Body.  # noqa: E501
        :type: bool
        """

        self._use_datacite = use_datacite

    @property
    def use_github(self):
        """Gets the use_github of this Body.  # noqa: E501

        Indicates if the GitHub REST API shall be used to collect (meta)data  # noqa: E501

        :return: The use_github of this Body.  # noqa: E501
        :rtype: bool
        """
        return self._use_github

    @use_github.setter
    def use_github(self, use_github):
        """Sets the use_github of this Body.

        Indicates if the GitHub REST API shall be used to collect (meta)data  # noqa: E501

        :param use_github: The use_github of this Body.  # noqa: E501
        :type: bool
        """

        self._use_github = use_github

    @property
    def metric_version(self):
        """Gets the metric_version of this Body.  # noqa: E501

        The FAIRsFAIR metric version be used fo rthe assessment  # noqa: E501

        :return: The metric_version of this Body.  # noqa: E501
        :rtype: str
        """
        return self._metric_version

    @metric_version.setter
    def metric_version(self, metric_version):
        """Sets the metric_version of this Body.

        The FAIRsFAIR metric version be used fo rthe assessment  # noqa: E501

        :param metric_version: The metric_version of this Body.  # noqa: E501
        :type: str
        """

        self._metric_version = metric_version

    @property
    def auth_token(self):
        """Gets the auth_token of this Body.  # noqa: E501

        The authentication token for HTTP authentication  # noqa: E501

        :return: The auth_token of this Body.  # noqa: E501
        :rtype: str
        """
        return self._auth_token

    @auth_token.setter
    def auth_token(self, auth_token):
        """Sets the auth_token of this Body.

        The authentication token for HTTP authentication  # noqa: E501

        :param auth_token: The auth_token of this Body.  # noqa: E501
        :type: str
        """

        self._auth_token = auth_token

    @property
    def auth_token_type(self):
        """Gets the auth_token_type of this Body.  # noqa: E501

        The authentication token type, 'Basic' or 'Bearer'  # noqa: E501

        :return: The auth_token_type of this Body.  # noqa: E501
        :rtype: str
        """
        return self._auth_token_type

    @auth_token_type.setter
    def auth_token_type(self, auth_token_type):
        """Sets the auth_token_type of this Body.

        The authentication token type, 'Basic' or 'Bearer'  # noqa: E501

        :param auth_token_type: The auth_token_type of this Body.  # noqa: E501
        :type: str
        """

        self._auth_token_type = auth_token_type

    @property
    def oaipmh_endpoint(self):
        """Gets the oaipmh_endpoint of this Body.  # noqa: E501

        (Deprecated) The URL of the OAI-PMH data-provider  # noqa: E501

        :return: The oaipmh_endpoint of this Body.  # noqa: E501
        :rtype: str
        """
        return self._oaipmh_endpoint

    @oaipmh_endpoint.setter
    def oaipmh_endpoint(self, oaipmh_endpoint):
        """Sets the oaipmh_endpoint of this Body.

        (Deprecated) The URL of the OAI-PMH data-provider  # noqa: E501

        :param oaipmh_endpoint: The oaipmh_endpoint of this Body.  # noqa: E501
        :type: str
        """

        self._oaipmh_endpoint = oaipmh_endpoint

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict()) if hasattr(item[1], "to_dict") else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(Body, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Body):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
